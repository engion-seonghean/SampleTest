//------------------------------------------------------------------------------
// <auto-generated>
//    이 코드는 템플릿에서 생성되었습니다.
//
//    이 파일을 수동으로 변경하면 응용 프로그램에 예기치 않은 동작이 발생할 수 있습니다.
//    코드가 다시 생성되면 이 파일에 대한 수동 변경 사항을 덮어씁니다.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace FuncEvent
{
    #region 컨텍스트
    
    /// <summary>
    /// 사용 가능한 메타데이터 설명서가 없습니다.
    /// </summary>
    public partial class LogEntities : ObjectContext
    {
        #region 생성자
    
        /// <summary>
        /// 응용 프로그램 구성 파일의 'LogEntities' 섹션에서 검색된 연결 문자열을 사용하여 새 LogEntities 개체를 초기화합니다.
        /// </summary>
        public LogEntities() : base("name=LogEntities", "LogEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 새 LogEntities 개체를 초기화합니다.
        /// </summary>
        public LogEntities(string connectionString) : base(connectionString, "LogEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 새 LogEntities 개체를 초기화합니다.
        /// </summary>
        public LogEntities(EntityConnection connection) : base(connection, "LogEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 부분 메서드(Partial Method)
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 속성
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        public ObjectSet<LogDbItem> Log
        {
            get
            {
                if ((_Log == null))
                {
                    _Log = base.CreateObjectSet<LogDbItem>("Log");
                }
                return _Log;
            }
        }
        private ObjectSet<LogDbItem> _Log;

        #endregion

        #region AddTo 메서드
    
        /// <summary>
        /// Log EntitySet에 새 개체를 추가하는 데 사용되지 않는 메서드입니다. 연결된 ObjectSet&lt;T&gt; 속성의 .Add 메서드를 대신 사용하십시오.
        /// </summary>
        public void AddToLog(LogDbItem logDbItem)
        {
            base.AddObject("Log", logDbItem);
        }

        #endregion

    }

    #endregion

    #region 엔터티
    
    /// <summary>
    /// 사용 가능한 메타데이터 설명서가 없습니다.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LogModel", Name="LogDbItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LogDbItem : EntityObject
    {
        #region 팩터리 메서드
    
        /// <summary>
        /// 새 LogDbItem 개체를 만듭니다.
        /// </summary>
        /// <param name="logID">LogID 속성의 초기 값입니다.</param>
        public static LogDbItem CreateLogDbItem(global::System.Int32 logID)
        {
            LogDbItem logDbItem = new LogDbItem();
            logDbItem.LogID = logID;
            return logDbItem;
        }

        #endregion

        #region 단순 속성
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LogID
        {
            get
            {
                return _LogID;
            }
            set
            {
                if (_LogID != value)
                {
                    OnLogIDChanging(value);
                    ReportPropertyChanging("LogID");
                    _LogID = StructuralObject.SetValidValue(value, "LogID");
                    ReportPropertyChanged("LogID");
                    OnLogIDChanged();
                }
            }
        }
        private global::System.Int32 _LogID;
        partial void OnLogIDChanging(global::System.Int32 value);
        partial void OnLogIDChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LogDate
        {
            get
            {
                return _LogDate;
            }
            set
            {
                OnLogDateChanging(value);
                ReportPropertyChanging("LogDate");
                _LogDate = StructuralObject.SetValidValue(value, "LogDate");
                ReportPropertyChanged("LogDate");
                OnLogDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LogDate;
        partial void OnLogDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLogDateChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LogType
        {
            get
            {
                return _LogType;
            }
            set
            {
                OnLogTypeChanging(value);
                ReportPropertyChanging("LogType");
                _LogType = StructuralObject.SetValidValue(value, true, "LogType");
                ReportPropertyChanged("LogType");
                OnLogTypeChanged();
            }
        }
        private global::System.String _LogType;
        partial void OnLogTypeChanging(global::System.String value);
        partial void OnLogTypeChanged();
    
        /// <summary>
        /// 사용 가능한 메타데이터 설명서가 없습니다.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LogText
        {
            get
            {
                return _LogText;
            }
            set
            {
                OnLogTextChanging(value);
                ReportPropertyChanging("LogText");
                _LogText = StructuralObject.SetValidValue(value, true, "LogText");
                ReportPropertyChanged("LogText");
                OnLogTextChanged();
            }
        }
        private global::System.String _LogText;
        partial void OnLogTextChanging(global::System.String value);
        partial void OnLogTextChanged();

        #endregion

    }

    #endregion

}
